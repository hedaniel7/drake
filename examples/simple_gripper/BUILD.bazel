load("//tools/lint:lint.bzl", "add_lint_tests")
load(
    "//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
)

# Place model files for this example within their own group.
# We can use these models in other bazel projects by adding the dependency
# "//examples/simple_gripper:simple_gripper_models".
filegroup(
    name = "simple_gripper_models",
    srcs = [
        "simple_gripper.sdf",
        "simple_mug.sdf",
        "robotiq_85_gripper.urdf",
    ],
    visibility = ["//visibility:public"],
)

drake_cc_binary(
    name = "simple_gripper",
    srcs = ["simple_gripper.cc"],
    add_test_rule = 1,
    data = [
        ":simple_gripper_models",
    ],
    test_rule_args = [
        "--simulator_integration_scheme=runge_kutta2",
        "--simulation_time=0.01",
        "--simulator_target_realtime_rate=0.0",
    ],
    test_rule_timeout = "moderate",
    deps = [
        "//common:add_text_logging_gflags",
        "//math:geometric_transform",
        "//multibody/parsing",
        "//multibody/plant",
        "//systems/analysis:simulator",
        "//systems/analysis:simulator_gflags",
        "//systems/analysis:simulator_print_stats",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/primitives:sine",
        "//visualization:visualization_config_functions",
        "@gflags",
    ],
)

drake_cc_binary(
    name = "robotiq",
    srcs = ["robotiq.cc"],
    data = [
      "//examples/kuka_iiwa_arm:models",
      "010_potted_meat_can.sdf",
      "010_potted_meat_can_textured.obj",
      "mesh.sdf",
      "mesh.obj",
      "CheezItBox/CheezItBox.urdf",
      "robotiq_85_gripper.urdf",
    ],
    deps = [
        "//geometry:meshcat",
        "//multibody/parsing",
        "//multibody/plant",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/primitives:constant_vector_source",
        "//visualization:visualization_config_functions",
    ],
)

drake_cc_binary(
    name = "robotiq_140",
    srcs = ["robotiq_140.cc"],
    data = [
      "//examples/kuka_iiwa_arm:models",
      "010_potted_meat_can.sdf",
      "010_potted_meat_can_textured.obj",
      "mesh.sdf",
      "mesh.obj",
      "robotiq_140_gripper.urdf",
    ],
    deps = [
        "//geometry:meshcat",
        "//multibody/parsing",
        "//multibody/plant",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/primitives:constant_vector_source",
        "//visualization:visualization_config_functions",
    ],
)

drake_cc_binary(
    name = "robotiq_140_shape_completion",
    srcs = ["robotiq_140_shape_completion.cc"],
    data = [
      "//examples/kuka_iiwa_arm:models",
      "010_potted_meat_can.sdf",
      "010_potted_meat_can_textured.obj",
      "mesh.sdf",
      "mesh.obj",
      "robotiq_140_gripper.urdf",
    ],
    deps = [
        "//geometry:meshcat",
        "//multibody/parsing",
        "//multibody/plant",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/primitives:constant_vector_source",
        "//visualization:visualization_config_functions",
    ],
)

drake_cc_binary(
    name = "robotiq_140_ycb",
    srcs = ["robotiq_140_ycb.cc"],
    data = [
      "//examples/kuka_iiwa_arm:models",
      "010_potted_meat_can.sdf",
      "010_potted_meat_can_textured.obj",
      "mesh.sdf",
      "mesh.obj",
      "CheezItBox.sdf",
      "CheezItBox.obj",
      "robotiq_140_gripper.urdf",
    ],
    deps = [
        "//geometry:meshcat",
        "//multibody/parsing",
        "//multibody/plant",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/primitives:constant_vector_source",
        "//visualization:visualization_config_functions",
    ],
)


#drake_cc_binary(
#    name = "robotiq_140_shape_completion_get_contact_forces",
#    srcs = ["robotiq_140_shape_completion_get_contact_forces.cc"],
#    data = [
#      "//examples/kuka_iiwa_arm:models",
#      "010_potted_meat_can.sdf",
#      "010_potted_meat_can_textured.obj",
#      "mesh.sdf",
#      "mesh.obj",
#      "robotiq_140_gripper.urdf",
#    ],
#    deps = [
#        "//geometry:meshcat",
#        "//multibody/parsing",
#        "//multibody/plant",
#        "//systems/analysis:simulator",
#        "//systems/framework:diagram",
#        "//systems/lcm:lcm_pubsub_system",
#        "//systems/primitives:constant_vector_source",
#        "//visualization:visualization_config_functions",
#    ],
#)


drake_cc_binary(
    name = "robotiq_140_shape_completion_get_contact_forces",
    srcs = ["robotiq_140_shape_completion_get_contact_forces.cc"],
    data = [
      "//examples/kuka_iiwa_arm:models",
      "010_potted_meat_can.sdf",
      "010_potted_meat_can_textured.obj",
      "mesh.sdf",
      "mesh.obj",
      "robotiq_140_gripper.urdf",
    ],
    deps = [
        "//geometry:meshcat",
        "//multibody/parsing",
        "//multibody/plant",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/primitives:constant_vector_source",
        "//visualization:visualization_config_functions",
        "@gflags",
    ],
)

drake_cc_binary(
    name = "robotiq_140_shape_completion_get_contact_forces_and_apply_forces",
    srcs = ["robotiq_140_shape_completion_get_contact_forces_and_apply_forces.cc"],
    data = [
      "//examples/kuka_iiwa_arm:models",
      "010_potted_meat_can.sdf",
      "010_potted_meat_can_textured.obj",
      "mesh.sdf",
      "mesh.obj",
      "robotiq_140_gripper.urdf",
    ],
    deps = [
        "//geometry:meshcat",
        "//multibody/parsing",
        "//multibody/plant",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/primitives:constant_vector_source",
        "//visualization:visualization_config_functions",
    ],
)

drake_cc_binary(
    name = "robotiq_140_shape_completion_integration",
    srcs = ["robotiq_140_shape_completion_integration.cc"],
    data = [
      "//examples/kuka_iiwa_arm:models",
      "010_potted_meat_can.sdf",
      "010_potted_meat_can_textured.obj",
      "mesh.sdf",
      "mesh.obj",
      "robotiq_140_gripper.urdf",
    ],
    deps = [
        "//geometry:meshcat",
        "//multibody/parsing",
        "//multibody/plant",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/primitives:constant_vector_source",
        "//visualization:visualization_config_functions",
        "@gflags",
    ],
)

drake_cc_binary(
    name = "robotiq_140_shape_completion_integration_midterm_presentation",
    srcs = ["robotiq_140_shape_completion_integration_midterm_presentation.cc"],
    data = [
      "//examples/kuka_iiwa_arm:models",
      "010_potted_meat_can.sdf",
      "010_potted_meat_can_textured.obj",
      "midterm_presentation/obj1/obj1_mesh.sdf",
      "midterm_presentation/obj2/obj2_mesh.sdf",
      "midterm_presentation/obj3/obj3_mesh.sdf",
      "midterm_presentation/obj1/obj1_midterm_presentation_rotated_mesh_cleaned.obj",
      "midterm_presentation/obj2/obj2_midterm_presentation_rotated_mesh_cleaned.obj",
      "midterm_presentation/obj3/obj3_midterm_presentation_rotated_mesh_cleaned.obj",
      "midterm_presentation/obj1/obj1_midterm_presentation_grasps_drake.csv",
      "midterm_presentation/obj2/obj2_midterm_presentation_grasps_drake.csv",
      "midterm_presentation/obj3/obj3_midterm_presentation_grasps_drake.csv",
      "mesh.obj",
      "robotiq_140_gripper.urdf",
    ],
    deps = [
        "//geometry:meshcat",
        "//multibody/parsing",
        "//multibody/plant",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/primitives:constant_vector_source",
        "//visualization:visualization_config_functions",
        "@gflags",
    ],
)

add_lint_tests()
